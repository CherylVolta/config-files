<?xml version="1.0" encoding="UTF-8"?>
<userTemplates>
  <template name="Basic"># === .idea ===
# 排除 .idea 文件夹下除了代码样式和运行配置的所有文件
.idea/*
!.idea/codeStyles
!.idea/runConfigurations
# === 插件生成的文件 ===
# mpeltonen/sbt-idea 插件
.idea_modules/
# JIRA 插件
atlassian-ide-plugin.xml
# Crashlytics 插件 (Android Studio 和 IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties
# CMake
cmake-build-*/
# === 由 IDE 自动生成的项目相关文件 ===
*.iws
*.iml
*.ipr
# === 使用 IDE 构建项目时的输出目录 ===
out/</template>
  <template name="For Maven"># === 使用 Maven Wapper 时应该排除的文件 ===
.mvn/timing.properties
# https://github.com/takari/maven-wrapper#usage-without-binary-jar
.mvn/wrapper/maven-wrapper.jar
# === pom ===
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
# === 其他 ===
release.properties
dependency-reduced-pom.xml
buildNumber.properties
# === 使用 Maven 构建项目时的输出目录 ===
target/</template>
  <template name="For Gradle"># === .gradle ===
.gradle
# === 其他 ===
# Gradle GUI 配置
gradle-app.setting
# 避免忽略 Gradle wrapper jar 文件 (.jar files are usually ignored)
!gradle-wrapper.jar
# 避免忽略 Gradle wrappper 配置
!gradle-wrapper.properties
# 项目缓存
.gradletasknamecache
# === 使用 Gradle 构建项目时的输出目录 ===
**/build/
# 避免忽略源代码中的任何 build 目录
!src/**/build/</template>
  <template name="For Nodejs"># === 日志 ===
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*
# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
# === 运行时数据 ===
pids
*.pid
*.seed
*.pid.lock
# ===工具 ===
# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov
# Coverage directory used by tools like istanbul
coverage
*.lcov
# nyc test coverage
.nyc_output
# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt
# Bower dependency directory (https://bower.io/)
bower_components
# node-waf configuration
.lock-wscript
# Yarn Integrity file
.yarn-integrity
# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local
# === 构建 ===
# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release
# Next.js build output
.next
out
# Nuxt.js build / generate output
.nuxt
dist
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public
# vuepress build output
.vuepress/dist
# === 依赖目录 ===
node_modules/
jspm_packages/
# Snowpack dependency directory (https://snowpack.dev/)
web_modules/
# === 其他 ===
# TypeScript cache
*.tsbuildinfo
# Optional npm cache directory
.npm
# Optional eslint cache
.eslintcache
# Optional stylelint cache
.stylelintcache
# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/
# Optional REPL history
.node_repl_history
# Output of 'npm pack'
*.tgz
# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache
# Gatsby files
.cache/
# vuepress v2.x temp and cache directory
.temp
# Docusaurus cache and generated files
.docusaurus
# Serverless directories
.serverless/
# FuseBox cache
.fusebox/
# DynamoDB Local files
.dynamodb/
# TernJS port file
.tern-port
# Stores VSCode versions used for testing VSCode extensions
.vscode-test
# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*</template>
</userTemplates>

